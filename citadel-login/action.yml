name: Citadel Login
description: Login into Citadel execution platform services
inputs:
  citadel-registries:
    required: false
    description: Registries manifest. Available as secrets.CITADEL_REGISTRIES
  citadel-environment:
    required: false
    description: Environment manifest. Available as secrets.CITADEL_ENVIRONMENT

runs:
  using: composite
  steps:
    - name: Mask Secrets
      uses: actions/github-script@v6
      with:
        script: |
          const registriesInput = core.getInput('citadel-registries') || '{}';
          const environmentInput = core.getInput('citadel-environment') || '{}';

          try {
            const registries = JSON.parse(registriesInput);
            if (registries.oci?.dev?.password){
              core.setSecret(registries.oci.dev.password);
            }
            if (registries.oci?.pro?.password){
              core.setSecret(registries.oci.pro.password);
            }
          } catch(error) {
            core.setFailed(`'citadel-registries' should be valid JSON`);
          }

          try {
            const environment = JSON.parse(environmentInput);
            if (kubernetes.credentials?.client_secret){
              core.setSecret(kubernetes.credentials.client_secret);
            }
          } catch(error) {
            core.setFailed(`'citadel-environment' should be valid JSON`);
          }

    - name: Login to OCI dev registry
      if: fromJSON(inputs.citadel-registries).oci.dev
      uses: docker/login-action@v2
      with:
        registry: ${{ fromJSON(inputs.citadel-registries).oci.dev.registry }}
        username: ${{ fromJSON(inputs.citadel-registries).oci.dev.username }}
        password: ${{ fromJSON(inputs.citadel-registries).oci.dev.password }}

    - name: Login to OCI pro registry
      if: fromJSON(inputs.citadel-registries).oci.pro
      uses: docker/login-action@v2
      with:
        registry: ${{ fromJSON(inputs.citadel-registries).oci.pro.registry }}
        username: ${{ fromJSON(inputs.citadel-registries).oci.pro.username }}
        password: ${{ fromJSON(inputs.citadel-registries).oci.pro.password }}

    # Logs in with your Azure credentials
    - name: Login to Azure
      if: fromJSON(inputs.citadel-environment).kubernetes
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ fromJSON(inputs.citadel-environment).kubernetes.credentials.client_id }}",
            "clientSecret": "${{ fromJSON(inputs.citadel-environment).kubernetes.credentials.client_secret }}",
            "subscriptionId": "${{ fromJSON(inputs.citadel-environment).kubernetes.credentials.subscription_id }}",
            "tenantId":  "${{ fromJSON(inputs.citadel-environment).kubernetes.credentials.tenant_id }}"
          }

    # Use kubelogin to configure your kubeconfig for Azure auth
    - name: Set up kubelogin
      if: fromJSON(inputs.citadel-environment).kubernetes
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: "v0.0.28"

    # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
    - name: Get K8s context
      if: fromJSON(inputs.citadel-environment).kubernetes
      uses: azure/aks-set-context@v3
      with:
        admin: "false"
        cluster-name: "${{ fromJSON(inputs.citadel-environment).kubernetes.name }}"
        resource-group: "${{ fromJSON(inputs.citadel-environment).kubernetes.resource_group }}"
        use-kubelogin: "true"
