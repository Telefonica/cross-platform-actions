name: Test Component

on:
  workflow_call:
    secrets:
      WRITE_SECRET_PAT:
        required: true

jobs:
  test-component-deploy:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: deploy
        name: Launch deploy action
        uses: ./deploy-platform
        with:
          environment: "test"
          project: "cross-platform-actions"
          repo-name: "cross-platform-actions"
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}
          request-interval: 5000
      - name: Check deployment manifest
        run: |
          echo '${{ steps.deploy.outputs.manifest }}' | jq -r '.registry.server' | grep 'foo-server' || (echo "Manifest is wrong" && exit 1)
  test-component-write-secret:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: write-secret
        name: Launch write-secret action
        uses: ./write-secret
        with:
          secret: TEST_SECRET
          value: value
          repositories: Telefonica/cross-platform-actions
          token: ${{ secrets.WRITE_SECRET_PAT }}
      - name: Check write-secret manifest
        run: |
          [[ '${{ steps.write-secret.outputs.manifest }}' == '{"github":{"secrets":[{"secret":"TEST_SECRET","repository":"Telefonica/cross-platform-actions"}]}}' ]] || (echo "::error::Action output has invalid value" && exit 1)
      - name: Check write-secret created secret
        timeout-minutes: 1
        run: |
          while true; do
            curl -s -H "Authorization: token ${{ secrets.WRITE_SECRET_PAT }}" https://api.github.com/repos/Telefonica/cross-platform-actions/actions/secrets/TEST_SECRET | jq -r '.name' | grep 'TEST_SECRET' && break
            sleep 10
          done
      - name: Clean up secret
        if: always()
        run: |
          curl -X DELETE -H "Authorization: token ${{ secrets.WRITE_SECRET_PAT }}" https://api.github.com/repos/Telefonica/cross-platform-actions/actions/secrets/TEST_SECRET || true
  test-component-write-secret-environment:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: write-secret
        name: Launch write-secret action
        uses: ./write-secret
        with:
          secret: TEST_SECRET
          value: value
          repositories: Telefonica/cross-platform-actions
          environment: test
          token: ${{ secrets.WRITE_SECRET_PAT }}
      - name: Check write-secret manifest
        run: |
          [[ '${{ steps.write-secret.outputs.manifest }}' == '{"github":{"secrets":[{"secret":"TEST_SECRET","repository":"Telefonica/cross-platform-actions","environment":"test"}]}}' ]] || (echo "::error::Action output has invalid value" && exit 1)
      - name: Check write-secret created secret
        timeout-minutes: 1
        run: |
          while true; do
            curl -s -H "Authorization: token ${{ secrets.WRITE_SECRET_PAT }}" https://api.github.com/repositories/617426279/environments/test/secrets/TEST_SECRET | jq -r '.name' | grep 'TEST_SECRET' && break
            sleep 10
          done
      - name: Clean up secret
        if: false
        run: |
          curl -X DELETE -H "Authorization: token ${{ secrets.WRITE_SECRET_PAT }}" https://api.github.com/repositories/617426279/environments/test/secrets/TEST_SECRET || true
  test-component-setup-oras:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: setup-oras
        name: Launch setup-oras action
        uses: ./setup-oras
        with:
          version: '1.0.0'
  test-component-manifest-write:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: write1
        name: "write json 1"
        uses: ./manifest-write
        with:
          id: 'w1'
          group: 'test-manifest'
          json: '{"foo":"bar1"}'

      - uses: nick-fields/assert-action@v1
        with:
          expected: '{"w1":{"foo":"bar1"}}'
          actual: ${{ steps.write1.outputs.manifests }}

      - uses: nick-fields/assert-action@v1
        with:
          expected: '{"include":[{"foo":"bar1"}]}'
          actual: ${{ steps.write1.outputs.matrix }}

      - id: write2
        name: "write json 2"
        uses: ./manifest-write
        with:
          id: 'w2'
          group: 'test-manifest'
          json: |
            {
              "foo": "bar2"
            }

      - id: write3
        name: "Overwrite json 2"
        uses: ./manifest-write
        with:
          id: 'w2'
          group: 'test-manifest'
          json: '{"foo": "bar-overwrite-2"}'

      - id: write-standalone
        name: "standalone manifest-write"
        uses: ./manifest-write
        with:
          id: 's1'
          json: '{"standalone": true}'

  test-component-manifest-read:
    runs-on: ${{ vars.JOBS_RUNNER }}
    needs:
      - test-component-manifest-write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: read
        name: Read test manifest
        uses: ./manifest-read
        with:
          group: 'test-manifest'

      - uses: nick-fields/assert-action@v1
        with:
          expected: '{"w1":{"foo":"bar1"},"w2":{"foo":"bar-overwrite-2"}}'
          actual: ${{ steps.read.outputs.manifests }}

      - uses: nick-fields/assert-action@v1
        with:
          expected: '{"include":[{"foo":"bar1"},{"foo":"bar-overwrite-2"}]}'
          actual: ${{ steps.read.outputs.matrix }}

      - id: read-standalone
        name: Read standalone manifest
        uses: ./manifest-read

      - uses: nick-fields/assert-action@v1
        with:
          expected: '{"s1":{"standalone":true}}'
          actual: ${{ steps.read-standalone.outputs.manifests }}

      - uses: nick-fields/assert-action@v1
        with:
          expected: '{"include":[{"standalone":true}]}'
          actual: ${{ steps.read-standalone.outputs.matrix }}
