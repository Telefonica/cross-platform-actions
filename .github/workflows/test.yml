name: Test

on:
  push:
    branches:
      - main
      - release/*
  pull_request:

jobs:
  check:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup env
        uses: ./.github/actions/pnpm-install
      - name: Lint
        run: pnpm run lint
      - name: Check spelling
        run: pnpm run check:spelling
      - name: Check Types
        run: pnpm nx run-many -t check:types
  test-unit:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup env
        uses: ./.github/actions/pnpm-install
      - name: Test
        run: pnpm nx run-many -t test
  build:
    runs-on: ${{ vars.JOBS_RUNNER }}
    defaults:
      run:
        working-directory: deploy-platform
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup env
        uses: ./.github/actions/pnpm-install
      - name: Build
        run: pnpm nx run-many --skip-nx-cache -t build
      - name: Check dist (deploy-platform)
        id: diff-deploy-platform
        working-directory: deploy-platform
        run: |
          pnpm nx run-many -t check:dist
  test-component-deploy:
    runs-on: ${{ vars.JOBS_RUNNER }}
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: deploy
        name: Launch deploy action
        uses: ./deploy-platform
        with:
          environment: "test"
          project: "cross-platform-actions"
          repo-name: "cross-platform-actions"
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}
          request-interval: 5000
      - name: Check deployment manifest
        run: |
          echo '${{ steps.deploy.outputs.manifest }}' | jq -r '.registry.server' | grep 'foo-server' || (echo "Manifest is wrong" && exit 1)
  test-component-write-secret:
    runs-on: ${{ vars.JOBS_RUNNER }}
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: generate-sample-manifest
        run: |
          echo '::set-output name=manifest::{"example": "${{ github.sha }}"}'
      - id: write-secret
        name: Launch write-secret action
        uses: ./write-secret
        with:
          secret: EXAMPLE_SECRET_NAME
          value: ${{ steps.generate-sample-manifest.outputs.manifest }}
          repositories: |
            [ "Telefonica/cross-platform-actions" ]
          token: ${{ secrets.PAT_SYNC_MANIFEST_CROSS_1455 }}
      - name: Check write-secret manifest
        run: |
          [[ '${{ steps.write-secret.outputs.manifest }}' == '{"github":{"secrets":[{"secret":"EXAMPLE_SECRET_NAME","repository":"Telefonica/cross-platform-actions"}]}}' ]] || echo "::error::Action output has invalid value"
      - name: Check write-secret created secret
        timeout-minutes: 1
        run: |
          while true; do
            curl -s -H "Authorization: token ${{ secrets.PAT_SYNC_MANIFEST_CROSS_1455 }}" https://api.github.com/repos/Telefonica/cross-platform-actions/actions/secrets/EXAMPLE_SECRET_NAME | jq -r '.name' | grep 'EXAMPLE_SECRET_NAME' && break
            sleep 10
          done
      - name: Clean up secret
        if: always()
        run: |
          curl -X DELETE -H "Authorization: token ${{ secrets.PAT_SYNC_MANIFEST_CROSS_1455 }}" https://api.github.com/repos/Telefonica/cross-platform-actions/actions/secrets/EXAMPLE_SECRET_NAME || true
