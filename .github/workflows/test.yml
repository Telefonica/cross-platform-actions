name: Test

on:
  push:
    branches:
      - main
      - release/*
  pull_request:

jobs:
  check:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup env
        uses: ./.github/actions/pnpm-install
      - name: Lint
        run: pnpm run lint
      - name: Check spelling
        run: pnpm run check:spelling
      - name: Check Types
        run: pnpm nx run-many -t check:types
  test-unit:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup env
        uses: ./.github/actions/pnpm-install
      - name: Test
        run: pnpm nx run-many -t test
  build:
    runs-on: ${{ vars.JOBS_RUNNER }}
    defaults:
      run:
        working-directory: deploy-platform
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup env
        uses: ./.github/actions/pnpm-install
      - name: Build
        run: pnpm nx run-many -t build
      - name: Check dist (deploy-platform)
        id: diff-deploy-platform
        working-directory: deploy-platform
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi
      - name: Check dist (write-env-secret)
        id: diff-write-env-secret
        working-directory: write-env-secret
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi
  test-component-deploy:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: deploy
        name: Launch deploy action
        uses: ./deploy-platform
        with:
          environment: "test"
          project: "cross-platform-actions"
          repo-name: "cross-platform-actions"
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}
          request-interval: 5000
      - name: Check deployment manifest
        run: |
          echo '${{ steps.deploy.outputs.manifest }}' | jq -r '.registry.server' | grep 'foo-server' || (echo "Manifest is wrong" && exit 1)
  test-component-write-env-secret:
    runs-on: ${{ vars.JOBS_RUNNER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: generate-sample-manifest
        run: |
          echo '::set-output name=manifest::{"example": "${{ github.sha }}"}'
      - id: write-env-secret
        name: Launch write-env-secret action
        uses: ./write-env-secret
        with:
          secret: EXAMPLE_SECRET_NAME
          value: ${{ steps.generate-sample-manifest.outputs.manifest }}
          repositories: |
            [ "Telefonica/cross-platform-actions" ]
          token: ${{ secrets.PAT_SYNC_MANIFEST_CROSS_1455 }}
      - name: Check write-env-secret manifest
        run: |
          [[ -z "${{ secrets.EXAMPLE_SECRET_NAME }}" ]] && (echo "::error::Secret is not set" && exit 1)
          [[ "${{ secrets.EXAMPLE_SECRET_NAME }}" == "${{ steps.generate-sample-manifest.outputs.manifest }}" ]] || (echo "::error::Secret has invalid value" && exit 1)
